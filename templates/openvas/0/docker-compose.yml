version: '2'
services:
  # 
  # # This Nginx will be the first to start, and it will serve the redirect as well as ACME verification
  # nginx:
  #   image: nginx:alpine
  #   restart: always
  #   hostname: nginx
  #   ports:
  #     - "80:80"
  #   links:
  #     - openvas
  #   volumes:
  #     - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./data/letsencrypt:/etc/letsencrypt
  #     - ./data/letsencrypt-www:/tmp/letsencrypt
  # # This Nginx requires the certificates to exist, otherwise will fail
  # nginx_ssl:
  #   image: nginx:alpine
  #   restart: always
  #   hostname: nginx_ssl
  #   ports:
  #     - "443:443"
  #   links:
  #     - openvas
  #     - letsencrypt
  #   volumes:
  #     - ./conf/nginx_ssl.conf:/etc/nginx/nginx.conf:ro
  #     - ./data/letsencrypt:/etc/letsencrypt
  #     - ./data/letsencrypt-www:/tmp/letsencrypt
  # letsencrypt:
  #   restart: always
  #   image: kvaps/letsencrypt-webroot
  #   volumes:
  #     - ./data/letsencrypt:/etc/letsencrypt
  #     - ./data/letsencrypt-www:/tmp/letsencrypt
  #   links:
  #     - nginx
  #   environment:
  #     DOMAINS: example.com
  #     EMAIL: webmaster@example.com
  #     WEBROOT_PATH: /tmp/letsencrypt
  #     EXP_LIMIT: 30
  #     CHECK_FREQ: 30

  openvas:
    restart: always
    image: mikesplain/openvas:9
    hostname: openvas
    expose:
      - "443"
    environment:
      OV_PASSWORD: ${OV_PASSWORD}
    labels:
      deck-chores.dump.command: sh -c "greenbone-nvt-sync; openvasmd --rebuild --progress"
      deck-chores.dump.interval: daily
      io.rancher.scheduler.affinity:host_label: openvas=1
      io.rancher.sidekicks: openvas-volume
    volumes_from:
      - openvas-volume
  openvas-volume:
    image: rawmind/alpine-volume:0.0.2-1
    environment:
      SERVICE_GID: '0'
      SERVICE_UID: '0'
      SERVICE_VOLUME: /var/lib/openvas/mgr/
    network_mode: none
    volumes:
      - /var/lib/openvas/mgr/
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.hostname_override: container_name
  # Daily updates to openvas
  cron:
    restart: always
    image: funkyfuture/deck-chores
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
